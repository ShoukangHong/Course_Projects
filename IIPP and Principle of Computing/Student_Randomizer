#paste student list here, one student per line, do not remove the '''
students = '''
A, A
B, B
C, C
D, D
E, E
F, F
G, G
H, H
I, I
J, J
K, K
L, L
M, M
N, N
O, O
P, P
Q, Q
R, R
S, S
T, T
U, U
V, V
W, W
X, X
Y, Y
Z, Z
'''

# Default setups
groupSize = 4		#Number of students per group
largerGroup = True	#When students cannot be devided by group size, have larger group size if True,have smaller group size if False
colNumber = 2 		#Column number
font = 30			#Text Font
width = 1280		#Popup Screen Width
height = 800		#Popup Screen Height

# Main logic
from math import ceil
import random
import simplegui

gList = []
students = students.strip().split('\n')
for i in range(len(students)):
    students[i] = students[i].strip()

# Button handlers
def randomize():
    global gList, groupSize, largerGroup
    gList = []
    random.shuffle(students)
    if largerGroup:
        num = len(students)//groupSize
    else:
        num = ceil(len(students)/groupSize)
    average = len(students)/num
    idx = 0
    for i, student in enumerate(students):
        if i + 1 > idx * average:
            idx += 1
            gList.append([])
            gList[-1].append('Group ' + str(idx))
        gList[-1].append(student)
    for group in gList:
        for text in group:
            print(text)

def fontSizeUp():
    global font
    font += max(2, 0.08 * font)
    
def fontSizeDown():
    global font
    if font > 10:
        font -= max(2, 0.08 * font)

def colNumberUp():
    global colNumber
    if largerGroup:
        num = len(students)//groupSize
    else:
        num = ceil(len(students)/groupSize)
    if colNumber < num and colNumber < 4:
        colNumber += 1
    
def colNumberDown():
    global colNumber
    if colNumber > 2:
        colNumber -= 1
        
def groupSizeUp():
    global groupSize
    if groupSize < len(students):
        groupSize += 1
    
def groupSizeDown():
    global groupSize
    if groupSize > 2:
        groupSize -= 1
        
def changeAdjustMode():
    global largerGroup
    largerGroup = not largerGroup
    
# Handler to draw on canvas
def draw(canvas):
    txt = "Group Size: " + str(groupSize) + "        "
    txt += "Mode: Allow Larger Group" if largerGroup else "Mode: Allow Smaller Group"
    canvas.draw_text(txt, [font,font*(1)*1.2], font*0.8, "Green")
    cols = []
    if not gList:
        colors = ['White' for count in range(len(students))]
        for i in range(colNumber):
            cols.append([''])
            for student in students[int(ceil(i*len(students)/colNumber)):int(ceil((i+1)*len(students)/colNumber))]:
                cols[-1].append(student)
    else:
        colors = []
        for i in range(colNumber):
            cols.append([])
            for group in gList[int(ceil(i*len(gList)/colNumber)):int(ceil((i+1)*len(gList)/colNumber))]:
                cols[-1] += group + ['']
                colors+= ["Yellow"] + ['White' for count in range(len(group))]
                
    for colIndex, colText in enumerate(cols):
        drawCol(canvas, colText, colIndex, colors)
    
def drawCol(canvas, texts, colIndex, colors):
    for row, text in enumerate(texts):
        canvas.draw_text(text, [colIndex * width//colNumber + font,font*(row+2)*1.15], font, colors[row])
        
# Create a frame and assign callbacks to event handlers
frame = simplegui.create_frame("Chem272 Randomizer", width, height)
frame.add_label("Randomizer:")
frame.add_button("Run", randomize)
frame.add_label("")
frame.add_label("Group Control:")
frame.add_button("Group Size Up", groupSizeUp)
frame.add_button("Group Size Down", groupSizeDown)
frame.add_button("Change Adjust Mode", changeAdjustMode)
frame.add_label("")
frame.add_label("Display Control:")
frame.add_button("Column number Up", colNumberUp)
frame.add_button("Column number Down", colNumberDown)
frame.add_button("Font Size Up", fontSizeUp)
frame.add_button("Font Size Down", fontSizeDown)
frame.set_draw_handler(draw)

# Start the frame animation
frame.start()

